!function (e) { var t = {}; function r(s) { if (t[s]) return t[s].exports; var a = t[s] = { i: s, l: !1, exports: {} }; return e[s].call(a.exports, a, a.exports, r), a.l = !0, a.exports } r.m = e, r.c = t, r.d = function (e, t, s) { r.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: s }) }, r.r = function (e) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e, "__esModule", { value: !0 }) }, r.t = function (e, t) { if (1 & t && (e = r(e)), 8 & t) return e; if (4 & t && "object" == typeof e && e && e.__esModule) return e; var s = Object.create(null); if (r.r(s), Object.defineProperty(s, "default", { enumerable: !0, value: e }), 2 & t && "string" != typeof e) for (var a in e) r.d(s, a, function (t) { return e[t] }.bind(null, a)); return s }, r.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return r.d(t, "a", t), t }, r.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, r.p = "public", r(r.s = 2) }([function (e, t, r) { "use strict"; Object.defineProperty(t, "__esModule", { value: !0 }), t.StyleClass = void 0, function (e) { e.Power = "pow", e.Array = "array", e.DivArrayItem = "arrayItem", e.CurrentItem = "currentItem", e.SwappedItem = "swappedItem", e.MinItem = "minItem", e.TmpItem = "tmpItem", e.PartitionResultItem = "partitionResultItem", e.PartitionCurrentItem = "currentPartitionItem", e.PivotItem = "pivotItem" }(t.StyleClass || (t.StyleClass = {})) }, function (e, t, r) { "use strict"; Object.defineProperty(t, "__esModule", { value: !0 }), t.HTMLFormat = t.sleep = t.randomNumberArray = void 0; const s = r(0); function a(e = 0, t = Number.MAX_SAFE_INTEGER) { return e + Math.round(Math.random() * Number.MAX_SAFE_INTEGER) % (t - e) } t.randomNumberArray = function (e, t = 0, r = 100) { let s = Array(e); for (let e = 0; e < s.length; ++e)s[e] = a(t, r); return s }, t.sleep = function (e) { return new Promise(t => setTimeout(t, e)) }, function (e) { e.variable = function (e) { return `<var>${e}</var>` }, e.power = function (e) { return `<span class="${s.StyleClass.Power}">${e}</span>` } }(t.HTMLFormat || (t.HTMLFormat = {})) }, function (e, t, r) { "use strict"; Object.defineProperty(t, "__esModule", { value: !0 }); const s = r(3), a = r(5), l = r(6), n = r(1), i = document.getElementById("selectSortAlgorithms"), o = document.getElementById("btnSort"), m = document.getElementById("btnGenRandItems"), u = document.getElementById("spinItemsNumber"), d = document.getElementById("sortAlgorithmVisualization"); let c = document.getElementById("sortAlgorithmDescription"); const y = { quicksort: a.quicksort, selectionSort: a.selectionSort }; let p = null, v = a.quicksort; function C(e) { i.disabled = e, m.disabled = e, o.disabled = e } i.addEventListener("change", () => { c.innerHTML = l.getInfoAsHTML(i.value), v = y[i.value] }), o.addEventListener("click", () => { C(!0), v(p).then(() => C(!1)) }), m.addEventListener("click", () => { const e = Number(u.value); e <= 0 ? alert("Array size must be positive") : (null !== p && p.setParent(null), p = new s.HTMLNumberArray(n.randomNumberArray(e), d)) }) }, function (e, t, r) { "use strict"; Object.defineProperty(t, "__esModule", { value: !0 }), t.HTMLNumberArray = t.BuiltInNumberArray = void 0; const s = r(4), a = r(0); t.BuiltInNumberArray = class { constructor(e) { this.container = Array.from(e) } get(e) { return this.container[e] } set(e, t) { this.container[e] = t } get length() { return this.container.length } }; t.HTMLNumberArray = class { constructor(e, t = null) { this.parent = null, this.itemsParent = document.createElement("div"), this.itemsParent.classList.add(a.StyleClass.Array), this.items = e.map(e => new s.HTMLDivArrayItem(e, this.itemsParent)), this.setParent(t) } get(e) { return this.items[e].value } set(e, t) { this.items[e].value = t } get length() { return this.items.length } setParent(e) { null !== this.parent && this.parent.removeChild(this.itemsParent), this.parent = e, null !== this.parent && this.parent.appendChild(this.itemsParent) } addStyleClassToItem(e, t) { this.items[e].addStyleClass(t) } removeStyleClassFromItem(e, t) { this.items[e].removeStyleClass(t) } } }, function (e, t, r) { "use strict"; Object.defineProperty(t, "__esModule", { value: !0 }), t.HTMLDivArrayItem = void 0; const s = r(0); t.HTMLDivArrayItem = class { constructor(e, t) { this.valueHolder = document.createElement("p"), this.valueHolder.innerHTML = e.toString(), this.div = document.createElement("div"), this.div.classList.add(s.StyleClass.DivArrayItem), this.div.appendChild(this.valueHolder), t.appendChild(this.div) } get value() { return Number(this.valueHolder.innerHTML) } set value(e) { this.valueHolder.innerHTML = e.toString() } addStyleClass(e) { this.div.classList.add(e) } removeStyleClass(e) { this.div.classList.remove(e) } } }, function (e, t, r) { "use strict"; Object.defineProperty(t, "__esModule", { value: !0 }), t.selectionSort = t.quicksort = void 0; const s = r(0), a = r(1); async function l(e, t, r, l = 1e3) { if (t !== r) { e.addStyleClassToItem(t, s.StyleClass.SwappedItem), e.addStyleClassToItem(r, s.StyleClass.SwappedItem), await a.sleep(l); let n = e.get(t); e.set(t, e.get(r)), e.set(r, n), e.removeStyleClassFromItem(t, s.StyleClass.SwappedItem), e.removeStyleClassFromItem(r, s.StyleClass.SwappedItem) } } async function n(e, t, r, i) { if (t < r) { let o = await async function (e, t, r, n) { !function (e, t, r, s) { for (let a = t; a < r; ++a)e.addStyleClassToItem(a, s) }(e, t, r + 1, s.StyleClass.PartitionCurrentItem), await a.sleep(n); let i = t - 1, o = e.get(r); e.addStyleClassToItem(r, s.StyleClass.PivotItem), await a.sleep(n); for (let m = t; m < r; ++m)e.addStyleClassToItem(m, s.StyleClass.TmpItem), await a.sleep(n), e.get(m) <= o && (++i, l(e, i, m)), e.removeStyleClassFromItem(m, s.StyleClass.TmpItem), await a.sleep(n); return l(e, i + 1, r), e.removeStyleClassFromItem(r, s.StyleClass.PivotItem), function (e, t, r, s) { for (let a = t; a < r; ++a)e.removeStyleClassFromItem(a, s) }(e, t, r + 1, s.StyleClass.PartitionCurrentItem), await a.sleep(n), i + 1 }(e, t, r, i); e.addStyleClassToItem(o, s.StyleClass.PartitionResultItem), await a.sleep(i), await n(e, t, o - 1, i), await n(e, o + 1, r, i), e.removeStyleClassFromItem(o, s.StyleClass.PartitionResultItem) } } t.quicksort = async function (e, t = 1e3) { await n(e, 0, e.length - 1, t) }, t.selectionSort = async function (e, t = 1e3) { for (let r = 0; r < e.length - 1; ++r) { e.addStyleClassToItem(r, s.StyleClass.CurrentItem), await a.sleep(t); let n = r; e.addStyleClassToItem(n, s.StyleClass.MinItem), await a.sleep(t); for (let l = r + 1; l < e.length; ++l)e.addStyleClassToItem(l, s.StyleClass.TmpItem), await a.sleep(t), e.get(n) > e.get(l) && (e.removeStyleClassFromItem(n, s.StyleClass.MinItem), n = l, e.addStyleClassToItem(n, s.StyleClass.MinItem)), e.removeStyleClassFromItem(l, s.StyleClass.TmpItem), await a.sleep(t); await l(e, n, r, t), e.removeStyleClassFromItem(n, s.StyleClass.MinItem), e.removeStyleClassFromItem(r, s.StyleClass.CurrentItem), await a.sleep(t) } } }, function (e, t, r) { "use strict"; Object.defineProperty(t, "__esModule", { value: !0 }), t.getInfoAsHTML = void 0; const s = r(1), a = { selectionSort: { worstCaseComplexity: `O(${s.HTMLFormat.variable("n")}${s.HTMLFormat.power(2)})`, averageCaseComplexity: `O(${s.HTMLFormat.variable("n")}${s.HTMLFormat.power(2)})`, bestCaseComplexity: `O(${s.HTMLFormat.variable("n")}${s.HTMLFormat.power(2)})`, detailInfo: "https://en.wikipedia.org/wiki/Selection_sort" }, quicksort: { worstCaseComplexity: `O(${s.HTMLFormat.variable("n")}${s.HTMLFormat.power(2)})`, averageCaseComplexity: `O(${s.HTMLFormat.variable("n")}log${s.HTMLFormat.variable("n")})`, bestCaseComplexity: `O(${s.HTMLFormat.variable("n")}log${s.HTMLFormat.variable("n")})`, detailInfo: "https://en.wikipedia.org/wiki/Quicksort" } }; t.getInfoAsHTML = function (e) { let t = a[e]; return `<p>Worst case complexity: ${t.worstCaseComplexity}</p>    <p>Average case complexity: ${t.averageCaseComplexity}</p>    <p>Best case complexity: ${t.bestCaseComplexity}</p>    <a href="${t.detailInfo}" target="_blank">Detail info</a>` } }]);